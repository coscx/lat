def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}
project.setProperty('target-platform', 'android-arm')
apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 29

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        applicationId "com.example.flt_im_plugin_example"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        ndk {
            //选择要添加的对应 cpu 类型的 .so 库。
            //abiFilters 'armeabi-v7a','x86'
            abiFilters 'armeabi-v7a'
            // 还可以添加  'mips', 'mips64'
        }
    }

    buildTypes {
        release {
            ndk{
                //这里其实我觉可以直接是用"armeabi-v7a"，但国内大多使用的都是"armeabi"
                abiFilters 'armeabi-v7a'
            }
            signingConfig signingConfigs.debug
            minifyEnabled false //删除无用代码
            useProguard false    //代码压缩设置
            shrinkResources false //删除无用资源
            //读取代码压缩配置文件
            //proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.2'
    implementation fileTree(include: ['*.jar'], dir: 'libs')
}
